import StationList from "../../components/station/StationList";

export const Line = ({ points, color }) => {
  return points.map((elem, i) => {
    if (points.length === i + 1) {
      return null;
    }
    let p1 = points[i];
    let p2 = points[i + 1];
    let [p1x, p1y] = p1;
    let [p2x, p2y] = p2;
    let x1 = p1x;
    let y1 = p1y;
    let x2;
    let y2;
    let x3 = p2x;
    let y3 = p2y;
    let flag = Math.random([0, 1], 1);

    if (p1x > p2x) {
      [p1x, p2x] = [p2x, p1x];
      [p1y, p2y] = [p2y, p1y];
    }

    if (Math.abs(p1x - p2x) > Math.abs(p1y - p2y)) {
      //1,2
      if (flag) {
        x2 = p2y > p1y ? p2x - (p2y - p1y) : p2x - (p1y - p2y);
        y2 = p1y;
      } else {
        x2 = p2y > p1y ? p1x + (p2y - p1y) : p1x + (p1y - p2y);
        y2 = p2y;
      }
    } else {
      if (flag) {
        x2 = p1x;
        y2 = p2y > p1y ? p2y - (p2x - p1x) : p2y + (p2x - p1x);
      } else {
        x2 = p2x;
        y2 = p2y > p1y ? p1y + (p2x - p1x) : p1y - (p2x - p1x);
      }
    }

    return (
      <polyline
        points={`${x1},${y1} ${x2},${y2} ${x3},${y3}`}
        style={{ fill: "transparent", stroke: color, strokeWidth: 5 }}
        stroke-linejoin="round"
      />
    );
  });
};

export const MainPage = () => {
  const points = [
    [
      [400 + 99.64524229439675, 400 + 19.67545845950927],
      [400 + 89.84830456393799, 400 + 12.776051209018938],
      [400 + 65.62304126915963, 400 + 7.395016755166458],
      [400 + 60.78194168112991, 400 + 1.374479976187919],
      [400 + 31.97623002737534, 400 + 2.6376258521193083],
      [400 + 0, 400 + 0],
      [400 + 1.0213044478383058, 400 + 1.3894475138629023],
      [400 + 8.930299818590514, 400 + 11.90441715618305],
      [400 + 25.037427432707098, 400 + 11.253458278074818],
      [400 + 41.344088097135426, 400 + 1.3840477059839624],
      [400 + 63.83458705987676, 400 + 1.385809610291332],
      [400 + 83.46700717353431, 400 + 14.747222742833182],
      [400 + 89.54818239557548, 400 + 17.49103644587501],
    ],
    [
      [300 + 14.594982393035668, 300 + 38.51211908859147],
      [300 + 6.894401258036339, 300 + 19.28081210271262],
      [300 + 0, 300 + 0],
      [300 + 16.513254171234024, 300 + 22.90625482500625],
      [300 + 15.357796325940374, 300 + 19.36706265175833],
      [300 + 24.787318950246632, 300 + 25.353620153185034],
      [300 + 33.90903119015979, 300 + 10.929303293527134],
      [300 + -38.775583301307975, 300 + 36.324625603699836],
      [300 + -64.84392302812631, 300 + 34.555657714228026],
      [300 + -65.54778433194878, 300 + 45.70890415925685],
      [300 + -89.02240383665772, 300 + 35.407326365917584],
      [300 + -75.35113211095293, 300 + 55.73993333475999],
      [300 + -87.38560227164808, 300 + 69.74865672824616],
    ],
    [
      [200 + 85.68973151046265, 200 + -50.8029184326689],
      [200 + 49.979432554076965, 200 + -37.23222776245787],
      [200 + 39.175402387885164, 200 + -32.5183379831161],
      [200 + 34.439234186250204, 200 + -32.22818718973855],
      [200 + 24.055183718008678, 200 + -38.97829761842981],
      [200 + 8.135953907763405, 200 + -21.211060400653224],
      [200 + 0, 200 + 0],
    ],
  ];

  // const points = [
  //   [-99.64524229439675, 19.67545845950927],
  //   [-89.84830456393799, -12.776051209018938],
  //   [-65.62304126915963, 7.395016755166458],
  //   [-60.78194168112991, -1.374479976187919],
  //   [-31.97623002737534, -2.6376258521193083],
  //   [0, 0],
  //   [1.0213044478383058, -1.3894475138629023],
  //   [8.930299818590514, -11.90441715618305],
  //   [25.037427432707098, -11.253458278074818],
  //   [41.344088097135426, -1.3840477059839624],
  //   [63.83458705987676, 1.385809610291332],
  //   [83.46700717353431, 14.747222742833182],
  //   [89.54818239557548, 17.49103644587501],
  // ];

  // return (
  //   <div>
  //     <svg height="1800" width="1000">
  //       <Line points={points} color={"red"} />
  //       <StationList points={points} />
  //     </svg>
  //   </div>
  // );

  return (
    <div>
      <svg height="1800" width="1000">
        {points.map((elem) => {
          return (
            <>
              <Line points={elem} color={"red"} />
              <StationList points={elem} />
            </>
          );
        })}
      </svg>
    </div>
  );
};
